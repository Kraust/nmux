// Code generated by "stringer -type=Op,Attr,Mode -output screen/const_string.go screen/bytes.go screen/color.go screen/const.go screen/opargs.go screen/redraw.go screen/screen.go screen/stream.go"; DO NOT EDIT.

package screen

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[OpResize-1]
	_ = x[OpClear-2]
	_ = x[OpKeyboard-3]
	_ = x[OpCursor-4]
	_ = x[OpPalette-5]
	_ = x[OpStyle-6]
	_ = x[OpPut-7]
	_ = x[OpPutRep-8]
	_ = x[OpTitle-9]
	_ = x[OpIcon-10]
	_ = x[OpBell-11]
	_ = x[OpScroll-12]
	_ = x[OpFlush-13]
	_ = x[OpLog-14]
	_ = x[OpEnd-15]
}

const _Op_name = "OpResizeOpClearOpKeyboardOpCursorOpPaletteOpStyleOpPutOpPutRepOpTitleOpIconOpBellOpScrollOpFlushOpLogOpEnd"

var _Op_index = [...]uint8{0, 8, 15, 25, 33, 42, 49, 54, 62, 69, 75, 81, 89, 96, 101, 106}

func (i Op) String() string {
	i -= 1
	if i >= Op(len(_Op_index)-1) {
		return "Op(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _Op_name[_Op_index[i]:_Op_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[AttrReverse-1]
	_ = x[AttrItalic-2]
	_ = x[AttrBold-4]
	_ = x[AttrUnderline-8]
	_ = x[AttrUndercurl-16]
	_ = x[AttrEnd-32]
}

const (
	_Attr_name_0 = "AttrReverseAttrItalic"
	_Attr_name_1 = "AttrBold"
	_Attr_name_2 = "AttrUnderline"
	_Attr_name_3 = "AttrUndercurl"
	_Attr_name_4 = "AttrEnd"
)

var (
	_Attr_index_0 = [...]uint8{0, 11, 21}
)

func (i Attr) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _Attr_name_0[_Attr_index_0[i]:_Attr_index_0[i+1]]
	case i == 4:
		return _Attr_name_1
	case i == 8:
		return _Attr_name_2
	case i == 16:
		return _Attr_name_3
	case i == 32:
		return _Attr_name_4
	default:
		return "Attr(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ModeBusy-1]
	_ = x[ModeMouseOn-2]
	_ = x[ModeNormal-4]
	_ = x[ModeInsert-8]
	_ = x[ModeReplace-16]
	_ = x[ModeRedraw-32]
	_ = x[ModeEnd-64]
}

const (
	_Mode_name_0 = "ModeBusyModeMouseOn"
	_Mode_name_1 = "ModeNormal"
	_Mode_name_2 = "ModeInsert"
	_Mode_name_3 = "ModeReplace"
	_Mode_name_4 = "ModeRedraw"
	_Mode_name_5 = "ModeEnd"
)

var (
	_Mode_index_0 = [...]uint8{0, 8, 19}
)

func (i Mode) String() string {
	switch {
	case 1 <= i && i <= 2:
		i -= 1
		return _Mode_name_0[_Mode_index_0[i]:_Mode_index_0[i+1]]
	case i == 4:
		return _Mode_name_1
	case i == 8:
		return _Mode_name_2
	case i == 16:
		return _Mode_name_3
	case i == 32:
		return _Mode_name_4
	case i == 64:
		return _Mode_name_5
	default:
		return "Mode(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
